name: Flat

on:
  push:
    paths:
      - .github/workflows/flat.yml # Only run a new workflow every time this file (flat.yaml) file changes
  workflow_dispatch: # Required even though this is currently empty
  schedule:
    - cron: '*/20 * * * *' # Run this workflow every 20 minutes

jobs:
  eftervaccinet:
    runs-on: ubuntu-latest
    steps: # This workflow has 3 steps
      # The first step is to check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v2
      # This step installs Deno, which is a new Javascript runtime that improves on Node. We'll use it for postprocessing later
      - name: Setup deno
        uses: denoland/setup-deno@v1
      # The third step is a Flat Action step. We fetch the data in the http_url and save it as downloaded_filename
      - name: Fetch data 
        uses: githubocto/flat@v3
        with:
          http_url: https://minnen.se/api/response/by_geo?topic_id=eftervaccinet # The data to fetch every 20 minutes
          downloaded_filename: eftervaccinet.json # The http_url gets saved and renamed in our repository
          postprocess: eftervaccinet/eftervaccinet_postprocess.js # A postprocessing javascript or typescript file
  nksfranska:
    runs-on: ubuntu-latest
    steps: # This workflow has 3 steps
      # The first step is to check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v2
      # This step installs Deno, which is a new Javascript runtime that improves on Node. We'll use it for postprocessing later
      - name: Setup deno
        uses: denoland/setup-deno@v1
      # The third step is a Flat Action step. We fetch the data in the http_url and save it as downloaded_filename
      - name: Fetch data 
        uses: githubocto/flat@v3
        with:
          http_url: http://api.minnen.se/api/responses?topic=393bb4f9-8f9a-4700-aea9-b1faab41545a # The data to fetch every 20 minutes
          downloaded_filename: nksfranska.json # The http_url gets saved and renamed in our repository
          postprocess: nksfranska/nksfranska_postprocess.js # A postprocessing javascript or typescript file
  vi:
    runs-on: ubuntu-latest
    steps: # This workflow has 3 steps
      # The first step is to check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v2
      # This step installs Deno, which is a new Javascript runtime that improves on Node. We'll use it for postprocessing later
      - name: Setup deno
        uses: denoland/setup-deno@v1
      # The third step is a Flat Action step. We fetch the data in the http_url and save it as downloaded_filename
      - name: Fetch data 
        uses: githubocto/flat@v3
        with:
          http_url: http://api.minnen.se/api/responses?topic=0f976fb0-b14b-4ef8-8bf9-84f3f07e1736 # The data to fetch every 20 minutes
          downloaded_filename: vi.json # The http_url gets saved and renamed in our repository
          postprocess: vi/vi_postprocess.js # A postprocessing javascript or typescript file
  corona:
    runs-on: ubuntu-latest
    steps: # This workflow has 3 steps
      # The first step is to check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v2
      # This step installs Deno, which is a new Javascript runtime that improves on Node. We'll use it for postprocessing later
      - name: Setup deno
        uses: denoland/setup-deno@v1
      # The third step is a Flat Action step. We fetch the data in the http_url and save it as downloaded_filename
      - name: Fetch data 
        uses: githubocto/flat@v3
        with:
          http_url: https://api.minnen.se/api/responses/?topic=f5c88a3d-0acf-4cac-bf3f-91cfb098ee12&limit=0 # The data to fetch every 20 minutes
          downloaded_filename: corona.json # The http_url gets saved and renamed in our repository
          postprocess: corona/corona_postprocess.js # A postprocessing javascript or typescript file
  korona:
    needs: corona
    runs-on: ubuntu-latest
    steps: # This workflow has 3 steps
      # The first step is to check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v2
      # This step installs Deno, which is a new Javascript runtime that improves on Node. We'll use it for postprocessing later
      - name: Setup deno
        uses: denoland/setup-deno@v1
      # The third step is a Flat Action step. We fetch the data in the http_url and save it as downloaded_filename
      - name: Fetch data 
        uses: githubocto/flat@v3
        with:
          http_url: https://api.minner.no/api/responses/?topic=9829edfb-a42d-4e39-9a30-7bdd7115c79a&limit=0 # The data to fetch every 20 minutes
          downloaded_filename: korona.json # The http_url gets saved and renamed in our repository
          postprocess: korona/corona_postprocess.js # A postprocessing javascript or typescript file
  deploy_corona:
    needs: korona
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: deploy file
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: 'root'
          server: 'vps-53420.cloudnet.se'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} 
          local_path: './corona/build/*'
          remote_path: '/mnt/persist/www/showcase/public/coronaminnen'
          args: '-o ConnectTimeout=5'
